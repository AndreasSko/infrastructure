name: 'Terraform'

on:
  push:
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "0.13.0"

    - name: Terraform Init
      working-directory: terraform
      run: terraform init 
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt -check 

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan 
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        TF_VAR_ssh_pub_key: ${{ secrets.SSH_PUB_KEY }}
        TF_VAR_workstation_ssh_pub_key: ${{ secrets.WORKSTATION_SSH_PUB_KEY }}


    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: terraform        
      run: terraform apply -auto-approve 
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
        TF_VAR_ssh_pub_key: ${{ secrets.SSH_PUB_KEY }}
        TF_VAR_workstation_ssh_pub_key: ${{ secrets.WORKSTATION_SSH_PUB_KEY }}
    
    - name: Setup Ansible & install requirements from Ansible Galaxy
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ansible
      run: |
        sudo apt update
        sudo apt install software-properties-common -y
        sudo pip3 install bcrypt
        ansible-galaxy install -r requirements.yml

    - name: Write private SSH key
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
       echo "${{ secrets.SSH_PRIV_KEY }}" > ./ansible/key.pem
       chmod 0600 ./ansible/key.pem
    
    - name: Run initial Ansible Playbook
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ansible
      run: ansible-playbook init.yml -i hosts.yml -v
      env:
        ANSIBLE_HOST_KEY_CHECKING: false

    - name: Run B2 Ansible Playbook
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ansible
      run: ansible-playbook b2.yml -i hosts.yml -v
      env:
        ANSIBLE_HOST_KEY_CHECKING: false
        B2_BUCKET: ${{ secrets.B2_BUCKET }}
        B2_KEY: ${{ secrets.B2_KEY }}
        B2_SECRET: ${{ secrets.B2_SECRET }}

    - name: Run System Ansible Playbook
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ansible
      run: ansible-playbook system.yml -i hosts.yml -v
      env:
        ANSIBLE_HOST_KEY_CHECKING: false
        INFLUXDB_INFLUXDB_USER_PASSWORD: ${{ secrets.INFLUXDB_INFLUXDB_USER_PASSWORD }}

    - name: Run Monitoring Ansible Playbook
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ansible
      run: ansible-playbook monitoring.yml -i hosts.yml -v
      env:
        ANSIBLE_HOST_KEY_CHECKING: false
        INFLUXDB_INFLUXDB_ADMIN_PASSWORD: ${{ secrets.INFLUXDB_INFLUXDB_ADMIN_PASSWORD }}
        INFLUXDB_INFLUXDB_USER_PASSWORD: ${{ secrets.INFLUXDB_INFLUXDB_USER_PASSWORD }}

    - name: Run Nextcloud Ansible Playbook
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: ansible
      run: ansible-playbook nextcloud.yml -i hosts.yml -v
      env:
        ANSIBLE_HOST_KEY_CHECKING: false
        NEXTCLOUD_MYSQL_ROOT_PASSWORD: ${{ secrets.NEXTCLOUD_MYSQL_ROOT_PASSWORD }}
        NEXTCLOUD_MYSQL_PASSWORD: ${{ secrets.NEXTCLOUD_MYSQL_PASSWORD }}
        NEXTCLOUD_OBJECTSTORE_S3_BUCKET: ${{ secrets.NEXTCLOUD_OBJECTSTORE_S3_BUCKET }}
        NEXTCLOUD_OBJECTSTORE_S3_KEY: ${{ secrets.NEXTCLOUD_OBJECTSTORE_S3_KEY }}
        NEXTCLOUD_OBJECTSTORE_S3_SECRET: ${{ secrets.NEXTCLOUD_OBJECTSTORE_S3_SECRET }}
