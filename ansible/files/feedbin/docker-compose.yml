version: '2.2'

services:

  feedbin-web:
    image: andreassko/feedbin-web:latest
    environment:
      PORT: 3000
    env_file:
     - ./.env
    labels:
      traefik.enable: "true"
      traefik.http.routers.feedbin-web.rule: "Host(`feedbin.andreas-sk.de`)"
      traefik.http.routers.feedbin-web.tls: "true"
      traefik.http.routers.feedbin-web.tls.certresolver: letsencrypt
      traefik.http.routers.feedbin-web.middlewares: block-feedbin-signup@docker, block-feedbin-users@docker
      traefik.http.services.feedbin-web.loadbalancer.server.port: 3000
      traefik.http.middlewares.block-feedbin-signup.plugin.blockpath.regex: "^/signup(.*)"
      traefik.http.middlewares.block-feedbin-users.plugin.blockpath.regex: "^/users(.*)"
    command: sh -c "rm -rf /app/tmp/* && bundle exec rails s --port 3000 --binding 0.0.0.0"
    restart: always
    networks:
      - public
      - feedbin
    
  feedbin-workers:
    image: andreassko/feedbin-web:latest
    env_file:
     - ./.env
    command: foreman start
    restart: always
    mem_swappiness: 100
    networks:
      - feedbin
    
  feedbin-elasticsearch:
    image: elasticsearch:8.4.2
    hostname: elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
    volumes:
      - ./volumes/elasticsearch/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    networks:
      - feedbin
    
  feedbin-memcached:
    hostname: memcached
    image: memcached:1.6-alpine
    restart: always
    networks:
      - feedbin
    
  feedbin-redis:
    image: redis:5-alpine
    hostname: feedbin-redis
    command: "redis-server --appendonly yes"
    volumes:
      - ./volumes/redis:/data
    restart: always
    networks:
      - feedbin
    
  feedbin-postgres:
    image: postgres:13-alpine
    hostname: postgres
    env_file:
     - ./.env
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - /mnt/b2/backups/feedbin:/backups
    restart: always
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.feedbin-psql-backup.schedule: "@daily" 
      ofelia.job-exec.feedbin-psql-backup.command: '/bin/bash -c "pg_dump -U $$POSTGRES_USERNAME -d feedbin_production | bzip2 -c > /backups/$$(date +%Y-%m-%dT%H:%M:%S).sql.bz2"'
    networks:
      - feedbin
    
  feedbin-extract:
    hostname: feedbin-extract
    image: andreassko/feedbin-extract:latest
    env_file:
      - ./.env
    labels:
      traefik.enable: "true"
      traefik.http.routers.feedbin-extract.rule: "Host(`extract-feedbin.andreas-sk.de`)"
      traefik.http.routers.feedbin-extract.tls: "true"
      traefik.http.routers.feedbin-extract.tls.certresolver: letsencrypt
      traefik.http.services.feedbin-extract.loadbalancer.server.port: 3000
    restart: always
    mem_swappiness: 100
    networks:
      - public
      - feedbin
    
networks:
  feedbin:
  public:
    name: public
