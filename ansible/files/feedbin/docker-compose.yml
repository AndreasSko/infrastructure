version: '2.2'

services:

  feedbin-web:
    image: andreassko/feedbin-web
    environment:
      PORT: 3000
    env_file:
     - ./.env
    labels:
      traefik.enable: "true"
      traefik.http.routers.feedbin-web.rule: "Host(`feedbin.andreas-sk.de`)"
      traefik.http.routers.feedbin-web.tls: "true"
      traefik.http.routers.feedbin-web.tls.certresolver: letsencrypt
      traefik.http.services.feedbin-web.loadbalancer.server.port: 3000
    command: bundle exec rails s --port 3000 --binding 0.0.0.0
    restart: always
    mem_limit: 256m
    networks:
      - public
      - feedbin
    logging:
      driver: local

  feedbin-workers:
    image: andreassko/feedbin-web
    env_file:
     - ./.env
    command: foreman start
    restart: always
    mem_limit: 256m
    networks:
      - feedbin
    logging:
      driver: local

  feedbin-elasticsearch:
    image: elasticsearch:2.4
    hostname: elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 256m
    restart: always
    networks:
      - feedbin
    logging:
      driver: local

  feedbin-refresher:
    image: andreassko/feedbin-refresher
    env_file:
     - ./.env
    restart: always
    mem_limit: 128m
    networks:
      - feedbin
    logging:
      driver: local

  feedbin-image:
    image: andreassko/feedbin-image
    env_file:
      - ./.env
    restart: always
    mem_limit: 128m
    networks:
      - feedbin
    logging:
      driver: local

  camo:
    image: increments/camo
    environment:
      - PORT=8081
    env_file:
     - ./.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
    labels:
      traefik.enable: "true"
      traefik.http.routers.feedbin-camo.rule: "Host(`camo-feedbin.andreas-sk.de`)"
      traefik.http.routers.feedbin-camo.tls: "true"
      traefik.http.routers.feedbin-camo.tls.certresolver: letsencrypt
    restart: always
    networks:
      - public
      - feedbin
    logging:
      driver: local

  feedbin-memcached:
    hostname: memcached
    image: memcached:1.5
    restart: always
    mem_limit: 128m
    networks:
      - feedbin
    logging:
      driver: local

  feedbin-redis:
    image: redis:5
    hostname: feedbin-redis
    command: "redis-server --appendonly yes"
    volumes:
      - ./volumes/redis:/data
    restart: always
    mem_limit: 128m
    networks:
      - feedbin
    logging:
      driver: local

  feedbin-postgres:
    image: postgres:13
    hostname: postgres
    env_file:
     - ./.env
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    restart: always
    mem_limit: 512m
    networks:
      - feedbin
    logging:
      driver: local

  feedbin-extract:
    hostname: feedbin-extract
    image: andreassko/feedbin-extract
    env_file:
      - ./.env
    labels:
      traefik.enable: "true"
      traefik.http.routers.feedbin-extract.rule: "Host(`extract-feedbin.andreas-sk.de`)"
      traefik.http.routers.feedbin-extract.tls: "true"
      traefik.http.routers.feedbin-extract.tls.certresolver: letsencrypt
      traefik.http.services.feedbin-extract.loadbalancer.server.port: 3000
    restart: always
    mem_limit: 128m
    networks:
      - public
      - feedbin
    logging:
      driver: local

networks:
  feedbin:
  public:
    name: public
